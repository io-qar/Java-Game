package entity;

import entity.item.HealthPotion;
import entity.item.PokeBall;
import entity.location.ItemLocation;
import entity.location.Location;
import entity.location.PokemonLocation;

import java.util.ArrayList;
import java.util.List;

public class Map {
    int width; // number of locations in x direction (columns)
    int height; // number of locations in y direction (rows)

    List<List<Location>> locations;

    public Map(int height, int width) {
        this.width = width;
        this.height = height;
        this.locations = new ArrayList<>();

        // create locations and put them in 1D array
        ArrayList<Location> locationsArray = new ArrayList<>();
        // add new locations here.
        // location descriptions were generated by ChatGPT.
        Location palletTown = new Location(0, 0, "PalletTown", "You're at the tranquil outskirts of Pallet Town, a serene place where the breeze carries the scent of the nearby sea, and new trainers start their Pokémon journey.");

        Pokemon pidgey = new Pokemon("Pidgey", 10, 2);
        Location route3 = new PokemonLocation(1, 0, "Route3", "The skies above Route 3 teem with winged Pokémon, where Flying-types rule the air currents, creating a mesmerizing spectacle of soaring creatures and sweeping vistas.", pidgey);

        HealthPotion potion = new HealthPotion("small potion", 5);
        Location cave = new ItemLocation(2, 0, "CeruleanCave", "Deep within Cerulean Cave, darkness envelops everything except for the eerie glow emanating from rare crystals, creating an otherworldly atmosphere within its depths.", potion);

        Pokemon caterpie = new Pokemon("Caterpie", 12, 1);
        Location forest = new PokemonLocation(0, 1, "ViridianForest", "You find yourself surrounded by towering trees, their leaves dappled in sunlight, as the gentle hum of Bug-type Pokémon fills the air.", caterpie);

        Location garden = new Location(1, 1, "EternalGarden", "The Eternal Garden exudes tranquility with its blooming flora and trickling streams, a serene oasis that invites exploration amidst its serene and verdant surroundings.");

        HealthPotion potion2 = new HealthPotion("big potion", 10);
        Location caverns = new ItemLocation(2, 1, "CrystalCaverns", "Deep within the Crystal Caverns, refracted light dances off the walls, illuminating the labyrinthine paths and revealing dazzling formations that seem to hold untold stories.", potion2);

        PokeBall pokeball = new PokeBall("pokeball", 0.5);
        ItemLocation ancientRuins = new ItemLocation(0, 2, "AncientRuins", "The Ancient Ruins stand as a testament to a bygone era, shrouded in mystery and surrounded by whispers of legendary Pokémon sightings.", pokeball);

        Location gym = new Location(1, 2, "Gym", "Located in Pewter City, this Gym is famous for its solid rock defenses and is led by Brock, the Rock-type Pokémon Gym Leader.");

        PokeBall masterball = new PokeBall("masterball", 1);
        ItemLocation sereneLake = new ItemLocation(2, 2, "SereneLake", "Nestled amidst lush greenery, Serene Lake reflects the azure sky and offers a tranquil ambiance for reflection and relaxation.", masterball);

        locationsArray.add(palletTown);
        locationsArray.add(route3);
        locationsArray.add(cave);
        locationsArray.add(forest);
        locationsArray.add(garden);
        locationsArray.add(caverns);
        locationsArray.add(ancientRuins);
        locationsArray.add(gym);
        locationsArray.add(sereneLake);

        // convert 1D array of locations to 2D array
        for (int row = 0; row < height; row++) {
            List<Location> newRow = new ArrayList<>();
            for (int col = 0; col < width; col++) {
                newRow.add(locationsArray.get((row * width) + col));
            }
            locations.add(newRow);
        }
    }

    public int getHeight() {
        return height;
    }

    public int getWidth() {
        return width;
    }

    public Location getLocation(int y, int x) {
        return locations.get(y).get(x);
    }
}
